<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>henRyXzx</title>
  
  <subtitle>Knowledge is a treasure, but practice is the key to it.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.henryxzx.com/"/>
  <updated>2018-09-14T16:08:32.206Z</updated>
  <id>http://blog.henryxzx.com/</id>
  
  <author>
    <name>XZX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux教程</title>
    <link href="http://blog.henryxzx.com/2018/09/10/Linux%E6%95%99%E7%A8%8B/"/>
    <id>http://blog.henryxzx.com/2018/09/10/Linux教程/</id>
    <published>2018-09-09T16:08:35.000Z</published>
    <updated>2018-09-14T16:08:32.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第-2-章-新手必须掌握的-Linux-命令"><a href="#第-2-章-新手必须掌握的-Linux-命令" class="headerlink" title="第 2 章 新手必须掌握的 Linux 命令"></a>第 2 章 新手必须掌握的 Linux 命令</h1><a id="more"></a><ul><li><code>man</code>命令中常用按键以及用途</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrdrhrknyj20mj0ci400.jpg" alt=""></p><ul><li><code>man</code>命令帮助信息的结构以及意义</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrdsy4yb3j20mq0c4dh8.jpg" alt=""></p><p>举例：<code>man man</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrdvph3bzj20o20nu0uq.jpg" alt=""></p><h2 id="常用系统工作命令"><a href="#常用系统工作命令" class="headerlink" title="常用系统工作命令"></a>常用系统工作命令</h2><ul><li><p><code>echo</code> 输出字符串或变量的值。</p></li><li><p><code>date</code> 用于显示及设置系统的时间或日期。<code>date [选项] [+指定的格式]</code> 其中<code>+</code>可以格式化。</p></li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsre0ltqizj20mo08ewf1.jpg" alt=""></p><p>举例：<code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrecwwaxyj20j6015a9w.jpg" alt=""></p><ul><li><p><code>reboot</code> 重启系统</p></li><li><p><code>poweroff</code> 关闭系统</p></li><li><p><code>wget</code> 用于在终端中下载网络文件</p></li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsree9lc79j20mw08l752.jpg" alt=""></p><p>举例：<code>wget https://www.linuxprobe.com/docs/LinuxProbe.pdf</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsregm9q21j20o308fjrx.jpg" alt=""></p><ul><li><code>ps</code> 用于查看系统中的进程状态</li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsreqmcx37j20ml04z3z2.jpg" alt=""></p><p>在 Linux 系统中，有5中常见的进程状态，分别为运行，中断，不可中断，僵死与停止，其各自含义如下所示。</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrevq6zk8j20lc09g40j.jpg" alt=""></p><p>进程状态各列的含义：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrewtf2ekj20n00c0mz4.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Linux系统中的命令参数有长短格式之分，长格式和长格式之间不能合并，长格式和短格式之间也不能合并，但短格式和短格式之间是可以合并的，合并后仅保留一个-（减号）即可。另外ps命令可允许参数不加减号（-），因此可直接写成ps aux的样子。</span><br></pre></td></tr></table></figure><ul><li><code>top</code> 用于动态监视进程活动与系统负载等信息。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrf5bzkzij20vv05774r.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrf5qr8zcj20n70ax42f.jpg" alt=""></p><ul><li><code>pidof</code> 用于查询某个指定服务进程的<code>PID</code>值。</li></ul><p>举例：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrf85l4x6j20iz016dfn.jpg" alt=""></p><ul><li><p><code>kill</code> 用于终止某个指定<code>PID</code>的服务进程。</p></li><li><p><code>killall</code> 用于终止某个指定名称的服务所对应的 <strong>全部</strong> 进程。</p></li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfc2sgcuj20mt06zmzj.jpg" alt=""></p><h2 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h2><ul><li><code>ifconfig</code> 用于获取网卡配置与网络状态等信息。</li></ul><p>主要用处：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用ifconfig命令来查看本机当前的网卡配置与网络状态等信息时，其实主要查看的就是网卡名称、inet参数后面的IP地址、ether参数后面的网卡物理地址（又称为MAC地址），以及RX、TX的接收数据包与发送数据包的个数及累计流量</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfinisn8j20iv09z0tc.jpg" alt=""></p><ul><li><code>uname</code> 用于查看系统内核与系统版本等信息。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在使用uname命令时，一般会固定搭配上-a参数来完整地查看当前系统的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息。</span><br></pre></td></tr></table></figure><p>举例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfl5wifrj20mp06a758.jpg" alt=""></p><ul><li><code>uptime</code> 用于查看系统的负载信息。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfmrouj5j20nt01ta9x.jpg" alt=""></p><p>跟<code>top</code>第一行应该是一样的。</p><ul><li><code>free</code> 用于显示当前系统中内存的使用量信息。</li></ul><p>举例：<code>free -h</code> <code>-h</code>人性化显示（GB，MB之类的）</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfqfx2xdj20ml07w3z5.jpg" alt=""></p><ul><li><code>who</code> 用于查看当前登入主机的用户终端信息。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfsblu51j20nh061weu.jpg" alt=""></p><ul><li><code>last</code> 用于查看所有系统的登录记录。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrfww3blsj20n9088abz.jpg" alt=""></p><ul><li><code>history</code> 用于显示历史执行过的命令。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行history命令能显示出当前用户在本地计算机中执行过的最近1000条命令记录。如果觉得1000不够用，还可以自定义/etc/profile文件中的HISTSIZE变量值。在使用history命令时，如果使用-c参数则会清空所有的命令历史记录。还可以使用“!编码数字”的方式来重复执行某一次的命令。</span><br></pre></td></tr></table></figure><ul><li><code>sosreport</code> 用于收集系统配置及架构信息并输出诊断文件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当Linux系统出现故障需要联系技术支持人员时，大多数时候都要先使用这个命令来简单收集系统的运行状态和服务配置信息，以便让技术支持人员能够远程解决一些小问题，亦或让他们能提前了解某些复杂问题。</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsrg11lcbhj20m409igmm.jpg" alt=""></p><h2 id="工作目录切换命令"><a href="#工作目录切换命令" class="headerlink" title="工作目录切换命令"></a>工作目录切换命令</h2><ul><li><p><code>pwd</code> 用于显示用户当前所处的工作目录。</p></li><li><p><code>cd</code> 用于切换工作路径。</p></li></ul><p><code>cd -</code> 返回上一次所处的目录。</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8bbvulgj20ld045mxc.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用“cd ..”命令进入上级目录，以及使用“cd ~”命令切换到当前用户的家目录，亦或使用“cd ~username”切换到其他用户的家目录。</span><br></pre></td></tr></table></figure><ul><li><code>ls</code> 用于显示目录中的文件信息。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用ls命令的“-a”参数看到全部文件（包括隐藏文件），使用“-l”参数可以查看文件的属性、大小等详细信息。将这两个参数整合之后，再执行ls命令即可查看当前目录中的所有文件并输出这些文件的属性信息。</span><br><span class="line">如果想要查看目录属性信息，则需要额外添加一个-d参数。</span><br></pre></td></tr></table></figure><h2 id="文本文件编辑命令"><a href="#文本文件编辑命令" class="headerlink" title="文本文件编辑命令"></a>文本文件编辑命令</h2><ul><li><p>Linux “一切皆文件”</p></li><li><p><code>cat</code> 用于查看纯文本文件（内容较少的）。</p></li></ul><p><code>cat -n</code> 显示行号。</p><ul><li><code>more</code> 用于查看纯文本文件。</li></ul><p><code>空格或回车</code> 翻页。</p><ul><li><code>head</code> 用于查看纯文本文档的前 N 行。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8lkq1gdj20ox09l40b.jpg" alt=""></p><ul><li><code>tail</code> 用于查看纯文本文档的后 N 行或 <strong>持续刷新内容</strong>。</li></ul><p><code>持续刷新内容举例 tail -f test</code>:</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8psx4maj20ck03f0sp.jpg" alt=""></p><ul><li><code>tr</code> 用于替换文本文件中的字符，<code>tr 「原始字符」 「目标字符」</code></li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8tg697pj20p60bggms.jpg" alt=""></p><ul><li><code>wc</code> 用于统计指定文本的行数，字数，字节数。</li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8ux1t2oj20j30410sv.jpg" alt=""></p><p><code>wc -l /var/log/messages</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8vcvzuqj20ci01cmx0.jpg" alt=""></p><ul><li><code>stat</code> 用于查看文件的具体存储信息和时间等信息。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss8yt45lgj20jb07pjss.jpg" alt=""></p><ul><li><code>cut</code> 用于按<code>列</code>提取文本字符。<code>-d</code>设置间隔符号，<code>-f</code>设置需要查看的列数，<code>-c</code>指定提取内容的字符串个数。</li></ul><p><code>head -10 /etc/shadow | cut -d: -f1</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss914jg97j20h70643yk.jpg" alt=""></p><p><code>head -10 /etc/passwd | cut -c2-4</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss94hobe8j20en05o748.jpg" alt=""></p><ul><li><code>diff</code> 用于比较多个文本文件的差异。</li></ul><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fss9h6n8quj20fc0k6wgd.jpg" alt=""></p><h2 id="文件目录管理命令"><a href="#文件目录管理命令" class="headerlink" title="文件目录管理命令"></a>文件目录管理命令</h2><ul><li><code>touch</code> 用于创建空白文件或设置文件的时间。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对touch命令来讲，有难度的操作主要是体现在设置文件内容的修改时间（mtime）、文件权限或属性的更改时间（ctime）与文件的读取时间（atime）</span><br></pre></td></tr></table></figure><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsscr44ridj20jg049aae.jpg" alt=""></p><p>举例：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssd1zhp41j20hd05s74p.jpg" alt=""></p><ul><li><p><code>mkdir</code> 用于创建空白的目录。</p></li><li><p><code>cp</code> 用于复制文件或目录。</p></li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssd3cvk3rj20kb090q55.jpg" alt=""></p><ul><li><p><code>mv</code> 用于剪切文件或将文件重命名。</p></li><li><p><code>rm</code> 用于删除文件或目录。</p></li><li><p><code>dd</code> 用于按照指定大小和个数的数据块来复制文件或转换文件。</p></li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssd8sakwvj20ki04rdg8.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux系统中有一个名为/dev/zero的设备文件，这个文件不会占用系统存储空间，但却可以提供无穷无尽的数据，因此可以使用它作为dd命令的输入文件，来生成一个指定大小的文件。</span><br></pre></td></tr></table></figure><p>例子：</p><p><code>dd if=/dev/zero of=hh count=2 bs=20M</code> 总文件大小”2*20M = 40M”</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssdd0i6lij20ho045dg3.jpg" alt=""></p><ul><li><code>file</code> 用于查看文件的类型。</li></ul><p>举例：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssdfyt6luj20gc02jq2z.jpg" alt=""></p><h2 id="打包压缩与搜索命令"><a href="#打包压缩与搜索命令" class="headerlink" title="打包压缩与搜索命令"></a>打包压缩与搜索命令</h2><ul><li><code>tar</code> 用于对文件进行打包压缩或解压。</li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssdhvipz3j20k108ydgv.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">首先，-c参数用于创建压缩文件，-x参数用于解压文件，因此这两个参数不能同时使用。其次，-z参数指定使用Gzip格式来压缩或解压文件，-j参数指定使用bzip2格式来压缩或解压文件。用户使用时则是根据文件的后缀来决定应使用何种格式参数进行解压。在执行某些压缩或解压操作时，可能需要花费数个小时，如果屏幕一直没有输出，您一方面不好判断打包的进度情况，另一方面也会怀疑电脑死机了，因此非常推荐使用-v参数向用户不断显示压缩或解压的过程。-C参数用于指定要解压到哪个指定的目录。</span><br><span class="line"></span><br><span class="line">！！！（重要）</span><br><span class="line">-f参数特别重要，它必须放到参数的最后一位，代表要压缩或解压的软件包名称。</span><br></pre></td></tr></table></figure><ul><li><code>grep</code> 用于在文本中执行关键词搜索，并显示匹配的结果。</li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssdmwsvbfj20j904gwev.jpg" alt=""></p><p>举例：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssdprmr4vj20nu0lo782.jpg" alt=""></p><ul><li><code>find</code> 用于按照指定条件来查找文件。</li></ul><p>参数列表：</p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fssds70s8mj20j00fin00.jpg" alt=""></p><p>例子：</p><p><code>find / -type f -name &quot;*.conf&quot; -exec stat -c &quot;%s %n&quot; {} \; | sort -nr | head -10</code></p><p><img src="https://ws1.sinaimg.cn/large/ecb0a9c3gy1fsseerskifj20ou0610tb.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">其中的&#123;&#125;表示搜索出的每一个文件。</span><br><span class="line">stat -c &quot;%s %n&quot; filename.</span><br></pre></td></tr></table></figure><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用uptime命令查看系统负载时，对应的负载数值如果是0.91、0.56、0.32，那么最近15分钟内负载压力最大的是哪个时间段？</span><br><span class="line">答：通过负载数值可以看出，最近1分钟内的负载压力是最大的。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第-2-章-新手必须掌握的-Linux-命令&quot;&gt;&lt;a href=&quot;#第-2-章-新手必须掌握的-Linux-命令&quot; class=&quot;headerlink&quot; title=&quot;第 2 章 新手必须掌握的 Linux 命令&quot;&gt;&lt;/a&gt;第 2 章 新手必须掌握的 Linux 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux makefile实验</title>
    <link href="http://blog.henryxzx.com/2018/04/25/Linux%20makefile%E5%AE%9E%E9%AA%8C/"/>
    <id>http://blog.henryxzx.com/2018/04/25/Linux makefile实验/</id>
    <published>2018-04-24T16:08:35.000Z</published>
    <updated>2018-09-14T15:58:51.236Z</updated>
    
    <content type="html"><![CDATA[<p>按照以下目录结构存放程序，然后制作makefile文件，把makefile文件内容填入表格中。</p><a id="more"></a><p>现有一个程序由5个文件组成:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ./main.c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mytool1.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mytool2.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mytool1_print(<span class="string">"hello mytool1!\n"</span>);</span><br><span class="line">mytool2_print(<span class="string">"hello mytool2!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ./functions/mytool1.c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mytool1.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mytool1_print</span><span class="params">(<span class="keyword">char</span> *print_str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This is mytool1 print : %s "</span>,print_str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ./functions/mytool1.h */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _MYTOOL_1_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _MYTOOL_1_H</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mytool1_print</span><span class="params">(<span class="keyword">char</span> *print_str)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ./functions/mytool2.c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mytool2.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mytool2_print</span><span class="params">(<span class="keyword">char</span> *print_str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This is mytool2 print : %s "</span>,print_str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ./functions/mytool2.h */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _MYTOOL_2_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _MYTOOL_2_H</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mytool2_print</span><span class="params">(<span class="keyword">char</span> *print_str)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">./Makefile</span><br><span class="line">main:mytool1.o mytool2.o main.o</span><br><span class="line">gcc mytool1.o mytool2.o main.o -o main</span><br><span class="line">main.o:main.c ./<span class="built_in">functions</span>/mytool1.h ./<span class="built_in">functions</span>/mytool2.h</span><br><span class="line">gcc -c main.c -o main.o -I <span class="built_in">functions</span></span><br><span class="line">mytool1.o:./<span class="built_in">functions</span>/mytool1.c ./<span class="built_in">functions</span>/mytool1.h</span><br><span class="line">gcc -c ./<span class="built_in">functions</span>/mytool1.c -o mytool1.o</span><br><span class="line">mytool2.o:./<span class="built_in">functions</span>/mytool2.c ./<span class="built_in">functions</span>/mytool2.h</span><br><span class="line">gcc -c ./<span class="built_in">functions</span>/mytool2.c -o mytool2.o</span><br><span class="line">clean:</span><br><span class="line">rm -rf *.o main</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://i.loli.net/2018/09/12/5b99240c3c17d.jpg" alt="20180425214632493.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按照以下目录结构存放程序，然后制作makefile文件，把makefile文件内容填入表格中。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux shell程序设计实验2</title>
    <link href="http://blog.henryxzx.com/2018/04/22/Linux%20shell%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C2/"/>
    <id>http://blog.henryxzx.com/2018/04/22/Linux shell程序设计实验2/</id>
    <published>2018-04-21T16:08:35.000Z</published>
    <updated>2018-09-14T16:08:18.095Z</updated>
    
    <content type="html"><![CDATA[<p>编写一个shell过程完成如下功能（必须在脚本中使用函数）</p><a id="more"></a><p>1.程序接收3个参数:$1/$2和$3,合并两个文件$1/$2为$3,并显示，三个文件均为文本文件。<br>2.如果文件$3不存在，那么先报告缺少$3，然后将合并后的内容输出到mydoc.txt。如果有$3，就合并到$3。<br>3.如果文件$2或文件$3不存在，那么先报告缺少$2/$3，只显示$1的内容。</p><p>4.如果文件$1不存在，则提示缺少$1，要求重新运行程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">f1</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"missing \$2 and \$3"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"output \$1:"</span></span><br><span class="line">    cat <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">f2</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"missing \$3, output mydoc.txt:"</span></span><br><span class="line">    cat <span class="variable">$1</span> <span class="variable">$2</span> &gt;mydoc.txt</span><br><span class="line">    cat mydoc.txt</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">error</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"missing \$1 \$2 \$3, error!"</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    error</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$#</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    f1 <span class="variable">$1</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$#</span> -eq 2 ]; <span class="keyword">then</span></span><br><span class="line">    f2 <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$#</span> -eq 3 ]; <span class="keyword">then</span></span><br><span class="line">    cat <span class="variable">$1</span> <span class="variable">$2</span> &gt;<span class="variable">$3</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"output \$3:"</span>    </span><br><span class="line">    cat <span class="variable">$3</span>    </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;编写一个shell过程完成如下功能（必须在脚本中使用函数）&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux shell程序设计实验1</title>
    <link href="http://blog.henryxzx.com/2018/04/21/Linux%20shell%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C1/"/>
    <id>http://blog.henryxzx.com/2018/04/21/Linux shell程序设计实验1/</id>
    <published>2018-04-20T16:08:35.000Z</published>
    <updated>2018-09-14T16:08:13.663Z</updated>
    
    <content type="html"><![CDATA[<p>实验1-1</p><p>设计如下一个菜单驱动程序</p><a id="more"></a><p>Use one of the following options:<br>P:To display current directory<br>S:To display the name of running file<br>D:To display today’s date and present time (要求显示为：2017-04-26 05:45:12)<br>L:To see the list of files in your present working directory<br>W:To see who is logged in<br>Q:To quit this program<br>Enter your option and hit:<br>菜单程序将根据用户输入的选择项给出相应信息。要求对用户的输入忽略大小写，对于无效选项的输入给出相应提示。要求使用case语句实现以上功能，输入相应的字母后应该执行相应的命令完成每项功能，如输入P或p，就执行pwd命令。</p><p>实验1-2<br>编写一段bash shell程序，<br>根据键盘输入的学生成绩，显示相应的成绩登等级，<br>其中<br>60分以下为”Failed!”,<br>60～69分为”Passed!”,<br>70~79分为”Medium!”,<br>80~89分为”Good!”，<br>90～100为”Excellent!”。<br>如果输入超过100的分数，则显示错误分数提示。</p><p>如果输入负数，则退出程序，否则一直提示用户输入成绩</p><p>1-1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">clear</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Use one of the following options:</span></span><br><span class="line"><span class="string">P:To display current directory</span></span><br><span class="line"><span class="string">S:To display the name of running file</span></span><br><span class="line"><span class="string">D:To display today's date and present time</span></span><br><span class="line"><span class="string">L:To see the list of files in your present working directory</span></span><br><span class="line"><span class="string">W:To see who is logged in</span></span><br><span class="line"><span class="string">Q:To quit this program</span></span><br><span class="line"><span class="string">Enter your option and hit:"</span></span><br><span class="line"><span class="built_in">read</span> ans</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$ans</span>"</span> <span class="keyword">in</span></span><br><span class="line">P|p)</span><br><span class="line">    <span class="built_in">pwd</span></span><br><span class="line">    ;;</span><br><span class="line">S|s)</span><br><span class="line">    ls</span><br><span class="line">    ;;</span><br><span class="line">D|d)</span><br><span class="line">    date -d <span class="string">'2017-04-26 05:45:12'</span> <span class="string">'+%Y-%m-%d %H:%M:%S'</span> </span><br><span class="line">    ;;</span><br><span class="line">L|l)</span><br><span class="line">    ls -l</span><br><span class="line">    ;;</span><br><span class="line">W|w)</span><br><span class="line">    who</span><br><span class="line">    ;;</span><br><span class="line">Q|q)</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>1-2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please input your score: (0 - 100)"</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> score</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -lt 0 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -lt 60 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Failed!"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -lt 70 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Passed!"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -lt 80 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Medium!"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -lt 90 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Good!"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -le 100 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Excellent!"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"the score must be smaller than 100"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验1-1&lt;/p&gt;
&lt;p&gt;设计如下一个菜单驱动程序&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux实验二</title>
    <link href="http://blog.henryxzx.com/2018/04/20/Linux%E5%AE%9E%E9%AA%8C%E4%BA%8C/"/>
    <id>http://blog.henryxzx.com/2018/04/20/Linux实验二/</id>
    <published>2018-04-19T16:08:35.000Z</published>
    <updated>2018-09-14T16:08:33.565Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Linux实验二"><a href="#Linux实验二" class="headerlink" title="Linux实验二"></a>Linux实验二</h4><a id="more"></a><h4 id="实验环境-win10-redhat5"><a href="#实验环境-win10-redhat5" class="headerlink" title="实验环境:win10 + redhat5"></a>实验环境:win10 + redhat5</h4><h4 id="1、创建组testgroup；"><a href="#1、创建组testgroup；" class="headerlink" title="1、创建组testgroup；"></a>1、创建组testgroup；</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd testgroup</span><br></pre></td></tr></table></figure><h4 id="2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。"><a href="#2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。" class="headerlink" title="2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。"></a>2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/groupd //在后面添加a2012</span><br></pre></td></tr></table></figure><h4 id="3、创建用户a2013，其用户主目录为-tmp-a2013，其主组为testgroup，附加组为users。"><a href="#3、创建用户a2013，其用户主目录为-tmp-a2013，其主组为testgroup，附加组为users。" class="headerlink" title="3、创建用户a2013，其用户主目录为/tmp/a2013，其主组为testgroup，附加组为users。"></a>3、创建用户a2013，其用户主目录为/tmp/a2013，其主组为testgroup，附加组为users。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /tmp/a2013 -g testgroup -G users a2013</span><br></pre></td></tr></table></figure><h4 id="4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件-tmp-test-log中。"><a href="#4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件-tmp-test-log中。" class="headerlink" title="4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件/tmp/test.log中。"></a>4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件/tmp/test.log中。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su a2012</span><br><span class="line">id</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su 2013</span><br><span class="line">id</span><br></pre></td></tr></table></figure><h4 id="5、参考书本98-99页crontab命令内容，使用root执行crontab-e，编写时程表，完成每隔5分钟把当前时间追加进-tmp-test-log中。"><a href="#5、参考书本98-99页crontab命令内容，使用root执行crontab-e，编写时程表，完成每隔5分钟把当前时间追加进-tmp-test-log中。" class="headerlink" title="5、参考书本98-99页crontab命令内容，使用root执行crontab -e，编写时程表，完成每隔5分钟把当前时间追加进/tmp/test.log中。"></a>5、参考书本98-99页crontab命令内容，使用root执行crontab -e，编写时程表，完成每隔5分钟把当前时间追加进/tmp/test.log中。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 * * * * data &gt;&gt; /tmp/test.log</span><br></pre></td></tr></table></figure><h4 id="6、执行crontab-l，把输出内容追加进-tmp-test-log。"><a href="#6、执行crontab-l，把输出内容追加进-tmp-test-log。" class="headerlink" title="6、执行crontab -l，把输出内容追加进/tmp/test.log。"></a>6、执行crontab -l，把输出内容追加进/tmp/test.log。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l &gt;&gt; /tmp/test.log</span><br></pre></td></tr></table></figure><h4 id="7、待完成2次时间记录追加后，执行crontab-r删除当前的时程表。"><a href="#7、待完成2次时间记录追加后，执行crontab-r删除当前的时程表。" class="headerlink" title="7、待完成2次时间记录追加后，执行crontab -r删除当前的时程表。"></a>7、待完成2次时间记录追加后，执行crontab -r删除当前的时程表。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -r</span><br></pre></td></tr></table></figure><h4 id="8、把-tmp-test-log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。"><a href="#8、把-tmp-test-log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。" class="headerlink" title="8、把/tmp/test.log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。"></a>8、把/tmp/test.log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Linux实验二&quot;&gt;&lt;a href=&quot;#Linux实验二&quot; class=&quot;headerlink&quot; title=&quot;Linux实验二&quot;&gt;&lt;/a&gt;Linux实验二&lt;/h4&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux课堂练习1</title>
    <link href="http://blog.henryxzx.com/2018/04/16/Linux%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A01/"/>
    <id>http://blog.henryxzx.com/2018/04/16/Linux课堂练习1/</id>
    <published>2018-04-15T16:08:35.000Z</published>
    <updated>2018-09-14T16:08:44.213Z</updated>
    
    <content type="html"><![CDATA[<p>环境：win10 + redhat 5</p><a id="more"></a><h5 id="1、创建组testgroup；"><a href="#1、创建组testgroup；" class="headerlink" title="1、创建组testgroup；"></a>1、创建组testgroup；</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd testgroup</span><br></pre></td></tr></table></figure><h5 id="2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。"><a href="#2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。" class="headerlink" title="2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。"></a>2、创建用户a2012，先采用默认设置创建，然后使该用户加入testgroup组。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd a2012</span><br><span class="line">usermod -g testgroup</span><br></pre></td></tr></table></figure><h5 id="3、创建用户a2013，其用户主目录为-tmp-a2013，其主组为testgroup，附加组为users。"><a href="#3、创建用户a2013，其用户主目录为-tmp-a2013，其主组为testgroup，附加组为users。" class="headerlink" title="3、创建用户a2013，其用户主目录为/tmp/a2013，其主组为testgroup，附加组为users。"></a>3、创建用户a2013，其用户主目录为/tmp/a2013，其主组为testgroup，附加组为users。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd a2013</span><br><span class="line">usermod -g testgroup</span><br><span class="line">usermod -G users</span><br></pre></td></tr></table></figure><h5 id="4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件-tmp-test-log中。"><a href="#4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件-tmp-test-log中。" class="headerlink" title="4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件/tmp/test.log中。"></a>4、用id命令显示a2012和a2013用户信息，并且把这些信息记录到日志文件/tmp/test.log中。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id a2012 &gt; /tmp/test.log</span><br><span class="line">id a2013 &gt;&gt; /tmp/test.log</span><br></pre></td></tr></table></figure><h5 id="5、参考书本98-99页crontab命令内容，使用root执行crontab-e，编写时程表，完成每隔5分钟把当前时间追加进-tmp-test-log中。"><a href="#5、参考书本98-99页crontab命令内容，使用root执行crontab-e，编写时程表，完成每隔5分钟把当前时间追加进-tmp-test-log中。" class="headerlink" title="5、参考书本98-99页crontab命令内容，使用root执行crontab -e，编写时程表，完成每隔5分钟把当前时间追加进/tmp/test.log中。"></a>5、参考书本98-99页crontab命令内容，使用root执行crontab -e，编写时程表，完成每隔5分钟把当前时间追加进/tmp/test.log中。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">*/5 * * * * date &gt;&gt; /tmp/test.log</span><br></pre></td></tr></table></figure><h5 id="6、执行crontab-l，把输出内容追加进-tmp-test-log。"><a href="#6、执行crontab-l，把输出内容追加进-tmp-test-log。" class="headerlink" title="6、执行crontab -l，把输出内容追加进/tmp/test.log。"></a>6、执行crontab -l，把输出内容追加进/tmp/test.log。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l &gt;&gt; /tmp/test.log</span><br></pre></td></tr></table></figure><h5 id="7、待完成2次时间记录追加后，执行crontab-r删除当前的时程表。"><a href="#7、待完成2次时间记录追加后，执行crontab-r删除当前的时程表。" class="headerlink" title="7、待完成2次时间记录追加后，执行crontab -r删除当前的时程表。"></a>7、待完成2次时间记录追加后，执行crontab -r删除当前的时程表。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -r</span><br></pre></td></tr></table></figure><h5 id="8、把-tmp-test-log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。"><a href="#8、把-tmp-test-log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。" class="headerlink" title="8、把/tmp/test.log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。"></a>8、把/tmp/test.log拷贝到windows中（注意文本格式的转换），采用记事本打开，看是否看到完整内容。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unix2dos test.log   <span class="comment">#将unix中的换行符转换为dos环境下能识别的类型</span></span><br></pre></td></tr></table></figure><p>最后将文件复制到win环境下得到test.log</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境：win10 + redhat 5&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux实验一</title>
    <link href="http://blog.henryxzx.com/2018/04/12/Linux%E5%AE%9E%E9%AA%8C%E4%B8%80/"/>
    <id>http://blog.henryxzx.com/2018/04/12/Linux实验一/</id>
    <published>2018-04-11T16:08:35.000Z</published>
    <updated>2018-09-14T16:08:36.637Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Linux实验一"><a href="#Linux实验一" class="headerlink" title="Linux实验一"></a>Linux实验一</h4><a id="more"></a><h4 id="环境：win10-redhat-5"><a href="#环境：win10-redhat-5" class="headerlink" title="环境：win10 + redhat 5"></a>环境：win10 + redhat 5</h4><h4 id="1、root帐号登录，查看-tmp目录，如果-tmp目录下没有子目录myshare，则建立该目录。"><a href="#1、root帐号登录，查看-tmp目录，如果-tmp目录下没有子目录myshare，则建立该目录。" class="headerlink" title="1、root帐号登录，查看/tmp目录，如果/tmp目录下没有子目录myshare，则建立该目录。"></a>1、root帐号登录，查看/tmp目录，如果/tmp目录下没有子目录myshare，则建立该目录。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /tmp | grep myshare</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /tmp/myshare</span><br></pre></td></tr></table></figure><h4 id="2、创建帐号testuser。"><a href="#2、创建帐号testuser。" class="headerlink" title="2、创建帐号testuser。"></a>2、创建帐号testuser。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd testuser</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd testuser</span><br></pre></td></tr></table></figure><h4 id="3、把myshare目录及其目录下的所有文件和子目录的拥有者该为testuser，工作组改为users。"><a href="#3、把myshare目录及其目录下的所有文件和子目录的拥有者该为testuser，工作组改为users。" class="headerlink" title="3、把myshare目录及其目录下的所有文件和子目录的拥有者该为testuser，工作组改为users。"></a>3、把myshare目录及其目录下的所有文件和子目录的拥有者该为testuser，工作组改为users。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R testuser:users /tmp/myshare</span><br></pre></td></tr></table></figure><h4 id="4、切换至testuser帐号。进入-tmp-myshare目录，采用vim编辑器编写以下程序-程序名称为hello-sh："><a href="#4、切换至testuser帐号。进入-tmp-myshare目录，采用vim编辑器编写以下程序-程序名称为hello-sh：" class="headerlink" title="4、切换至testuser帐号。进入/tmp/myshare目录，采用vim编辑器编写以下程序,程序名称为hello.sh："></a>4、切换至testuser帐号。进入/tmp/myshare目录，采用vim编辑器编写以下程序,程序名称为hello.sh：</h4><blockquote><p>#!/bin/bash<br>echo “app start”<br>echo -e<br>func (){<br>  echo “hello world!”<br>}<br>func<br>echo -e<br>echo “app end”<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su testuser</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /tmp/myshare/hello.sh</span><br></pre></td></tr></table></figure><h4 id="5、保存hello-sh后，给予hello-sh拥有者可读、可写和可执行的权限，同组可读可执行，其他人可执行权限。"><a href="#5、保存hello-sh后，给予hello-sh拥有者可读、可写和可执行的权限，同组可读可执行，其他人可执行权限。" class="headerlink" title="5、保存hello.sh后，给予hello.sh拥有者可读、可写和可执行的权限，同组可读可执行，其他人可执行权限。"></a>5、保存hello.sh后，给予hello.sh拥有者可读、可写和可执行的权限，同组可读可执行，其他人可执行权限。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 751 hello.sh</span><br></pre></td></tr></table></figure><h4 id="6、输入-hello-sh，观察程序输出的效果。"><a href="#6、输入-hello-sh，观察程序输出的效果。" class="headerlink" title="6、输入./hello.sh，观察程序输出的效果。"></a>6、输入./hello.sh，观察程序输出的效果。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hello.sh</span><br></pre></td></tr></table></figure><h4 id="7、进入testuser的用户主目录，在这个目录下创建hello-sh的软链接，同时拷贝hello-sh到该目录下并改名为hello-sh-bak，要求copy时保留文件属性值。"><a href="#7、进入testuser的用户主目录，在这个目录下创建hello-sh的软链接，同时拷贝hello-sh到该目录下并改名为hello-sh-bak，要求copy时保留文件属性值。" class="headerlink" title="7、进入testuser的用户主目录，在这个目录下创建hello.sh的软链接，同时拷贝hello.sh到该目录下并改名为hello.sh.bak，要求copy时保留文件属性值。"></a>7、进入testuser的用户主目录，在这个目录下创建hello.sh的软链接，同时拷贝hello.sh到该目录下并改名为hello.sh.bak，要求copy时保留文件属性值。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /tmp/myshare/hello.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -p /tmp/myshare/hello.sh /home/testuser/hello.sh.bak</span><br></pre></td></tr></table></figure><h4 id="8、退出testuser帐号，回到root帐号，从-开始查找后缀名为-conf的所有文件，把输出结果重定向到testuser帐号的主目录下的output-txt文件。"><a href="#8、退出testuser帐号，回到root帐号，从-开始查找后缀名为-conf的所有文件，把输出结果重定向到testuser帐号的主目录下的output-txt文件。" class="headerlink" title="8、退出testuser帐号，回到root帐号，从/开始查找后缀名为.conf的所有文件，把输出结果重定向到testuser帐号的主目录下的output.txt文件。"></a>8、退出testuser帐号，回到root帐号，从/开始查找后缀名为.conf的所有文件，把输出结果重定向到testuser帐号的主目录下的output.txt文件。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -<span class="built_in">type</span> f -name <span class="string">".conf"</span> &gt;&gt; /home/testuser/output.txt</span><br></pre></td></tr></table></figure><h4 id="9、在上一步操作的-conf文件中找出文件容量最大的和最小那个，并把这两个文件的容量大小输出到output-txt文件中。-gt-gt"><a href="#9、在上一步操作的-conf文件中找出文件容量最大的和最小那个，并把这两个文件的容量大小输出到output-txt文件中。-gt-gt" class="headerlink" title="9、在上一步操作的.conf文件中找出文件容量最大的和最小那个，并把这两个文件的容量大小输出到output.txt文件中。&gt;&gt;"></a>9、在上一步操作的.conf文件中找出文件容量最大的和最小那个，并把这两个文件的容量大小输出到output.txt文件中。&gt;&gt;</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -<span class="built_in">type</span> f -name <span class="string">".conf"</span> -ls | awk <span class="string">'&#123;print $7&#125;'</span>|sort -n &gt; /home/testuser/tmp.out</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -1 /home/testuser/tmp.out &gt;&gt; /home/testuser/output.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -1 /home/testuser/tmp.out &gt;&gt; /home/testuser/output.txt</span><br></pre></td></tr></table></figure><h4 id="10、统计出系统中有多少个用户帐号，把数量输出到output-txt文件中。"><a href="#10、统计出系统中有多少个用户帐号，把数量输出到output-txt文件中。" class="headerlink" title="10、统计出系统中有多少个用户帐号，把数量输出到output.txt文件中。"></a>10、统计出系统中有多少个用户帐号，把数量输出到output.txt文件中。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | wc -l &gt;&gt; /home/testuser/output.txt</span><br></pre></td></tr></table></figure><h4 id="11、把output-txt文件转换为windows记事本可正规打开的格式。"><a href="#11、把output-txt文件转换为windows记事本可正规打开的格式。" class="headerlink" title="11、把output.txt文件转换为windows记事本可正规打开的格式。"></a>11、把output.txt文件转换为windows记事本可正规打开的格式。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unix2doc output.txt</span><br></pre></td></tr></table></figure><h4 id="12、tar打包压缩testuser帐号主目录下的所有文件。"><a href="#12、tar打包压缩testuser帐号主目录下的所有文件。" class="headerlink" title="12、tar打包压缩testuser帐号主目录下的所有文件。"></a>12、tar打包压缩testuser帐号主目录下的所有文件。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf testuser.tar.gz /home/testuser</span><br></pre></td></tr></table></figure><h4 id="13、把tar文件另存在window系统下。"><a href="#13、把tar文件另存在window系统下。" class="headerlink" title="13、把tar文件另存在window系统下。"></a>13、把tar文件另存在window系统下。</h4><p>U盘或者ftp</p><h4 id="14、执行userdel-r-testuser，执行rm-fr-myshare"><a href="#14、执行userdel-r-testuser，执行rm-fr-myshare" class="headerlink" title="14、执行userdel -r testuser，执行rm -fr myshare"></a>14、执行userdel -r testuser，执行rm -fr myshare</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Linux实验一&quot;&gt;&lt;a href=&quot;#Linux实验一&quot; class=&quot;headerlink&quot; title=&quot;Linux实验一&quot;&gt;&lt;/a&gt;Linux实验一&lt;/h4&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.henryxzx.com/categories/Linux/"/>
    
    
      <category term="Linux实验" scheme="http://blog.henryxzx.com/tags/Linux%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
</feed>
